@lib/memory/padding.2
@lib/types/null.2
@lib/helpers/helpers.2

// contains macros to modify ELF headers
// if you want more information I recommend reading this article from linux-audit
// https://linux-audit.com/elf-binaries-on-linux-understanding-and-analysis/

// ELF header
#(ELF::ELF)    01111111 01000101 01001100 01000110

// class headers
#(ELF::32_BIT_CLASS_HEADER)    00000001
#(ELF::64_BIT_CLASS_HEADER)    00000010

// data headers
// LSB = little endian
// MSB = big endian
#(ELF::DATA_LSB_HEADER)    00000001
#(ELF::DATA_MSB_HEADER)    00000010

// version headers
#(ELF::VERSION_HEADER)     00000001

// OS/ABI headers
#(ELF::SYSTEM_V_HEADER)    00000000

// you should only really be using these macros in your program
// these elf headers are optimized for AMD64 processors
// you might have the change the data headers for different processors
#(ELF::32) (ELF::ELF) (ELF::32_BIT_CLASS_HEADER) (ELF::DATA_LSB_HEADER) (ELF::VERSION_HEADER) (ELF::SYSTEM_V_HEADER) (PADDING::64_ZERO_BITS)
#(ELF::64) (ELF::ELF) (ELF::64_BIT_CLASS_HEADER) (ELF::DATA_LSB_HEADER) (ELF::VERSION_HEADER) (ELF::SYSTEM_V_HEADER) (PADDING::64_ZERO_BITS)

// EHDR

#(ELF::TYPE_REL)     00000001 (TYPES::NULL)
#(ELF::TYPE_EXEC)    00000010 (TYPES::NULL)
#(ELF::TYPE_DYN)     00000011 (TYPES::NULL)
#(ELF::TYPE_CORE)    00000100 (TYPES::NULL)

#(ELF::MACHINE_x86)  00111110 (TYPES::NULL)

#(ELF::VERSION)          00000001 (TYPES::NULL)
#(ELF::VERSION_CUSTOM)   $ (TYPES::NULL)

#(ELF::ENTRY)            (PADDING::16_ZERO_BITS) (TYPES::NULL) $

// TODO: I haven't completed everything below this point
#(ELF::PHOFF)        (HELPERS::NOOP)
#(ELF::SHOFF)        (HELPERS::NOOP)
#(ELF::FLAGS)        (HELPERS::NOOP)
#(ELF::EHSIZE)       (HELPERS::NOOP)
#(ELF::PHENTSIZE)    (HELPERS::NOOP)
#(ELF::PHNUM)        (HELPERS::NOOP)
#(ELF::SHENTSIZE)    (HELPERS::NOOP)
#(ELF::SHNUM)        (HELPERS::NOOP)
#(ELF::SHSTRNDX)     (HELPERS::NOOP)
