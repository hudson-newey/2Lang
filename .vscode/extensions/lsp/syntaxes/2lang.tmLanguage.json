{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "2lang",
    "patterns": [
        { "include": "#strings" },
        { "include": "#comments" },
        { "include": "#imports" },
        { "include": "#code-execution" },
        { "include": "#code-execution-code" },
        { "include": "#macros" },
        { "include": "#arguments" }
    ],
    "repository": {
        "strings": {
            "name": "string.quoted.double.<%-languageId%>",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.<%-languageId%>",
                    "match": "\\\\."
                }
            ]
        },
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.<%-languageId%>",
                    "match": "//.*"
                },
                {
                    "name": "comment.block.<%-languageId%>",
                    "begin": "/\\*",
                    "end": "\\*/",
                    "patterns": [
                        {
                            "name": "storage.type.class.<%-languageId%>",
                            "match": "@description"
                        },
                        {
                            "name": "storage.type.class.<%-languageId%>",
                            "match": "@param"
                        },
                        {
                            "name": "storage.type.class.<%-languageId%>",
                            "match": "@return"
                        },
                        {
                            "name": "storage.type.class.<%-languageId%>",
                            "match": "@example"
                        },
                        {
                            "name": "storage.type.class.<%-languageId%>",
                            "match": "@see"
                        },
                        {
                            "name": "storage.type.class.<%-languageId%>",
                            "match": "@since"
                        },
                        {
                            "name": "invalid.deprecated.<%-languageId>",
                            "match": "@deprecated"
                        },
                        {
                            "name": "storage.type.class.<%-languageId%>",
                            "match": "@author"
                        },
                        {
                            "name": "storage.type.class.<%-languageId%>",
                            "match": "@version"
                        },
                        {
                            "name": "storage.type.class.<%-languageId%>",
                            "match": "@license"
                        },
                        {
                            "name": "storage.type.class.<%-languageId%>",
                            "match": "@targets"
                        }
                    ]
                }
            ]
        },
        "imports": {
            "patterns": [
                {
                    "name": "keyword.control.import.<%-languageId>",
                    "match": "(?!@!)(@.+)\\.2"
                }
            ]
        },
        "code-execution": {
            "patterns": [
                {
                    "name": "meta.preprocessor.<%-languageId>",
                    "match": "(@!.+){"
                }
            ]
        },
        "code-execution-code": {
            "patterns": [
                {
                    "name": "invalid.illegal",
                    "match": "{[.|\\s]+}"
                }
            ]
        },
        "macros": {
            "patterns": [
                {
                    "name": "keyword.operator.new.<%-languageId%>",
                    "match": "^#.+?\\s"
                }
            ]
        },
        "arguments": {
            "patterns": [
                {
                    "name": "variable.parameter",
                    "match": ".*?(?=[\r\n]|$)"
                }
            ]
        }
    },
    "scopeName": "source.2"
}
